{
  "version": 3,
  "sources": ["../../../src/components/alert-dialog.tsx"],
  "sourcesContent": ["import * as React from 'react';\nimport classNames from 'classnames';\nimport { AlertDialog as AlertDialogPrimitive } from 'radix-ui';\n\nimport { alertDialogContentPropDefs } from './alert-dialog.props.js';\nimport { Heading } from './heading.js';\nimport { Text } from './text.js';\nimport { Theme } from './theme.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { requireReactElement } from '../helpers/require-react-element.js';\n\nimport type { AlertDialogContentOwnProps } from './alert-dialog.props.js';\nimport type {\n  ComponentPropsWithout,\n  RemovedProps,\n  ComponentPropsAs,\n} from '../helpers/component-props.js';\n\ninterface AlertDialogRootProps\n  extends React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> {}\nconst AlertDialogRoot: React.FC<AlertDialogRootProps> = (props) => (\n  <AlertDialogPrimitive.Root {...props} />\n);\nAlertDialogRoot.displayName = 'AlertDialog.Root';\n\ntype AlertDialogTriggerElement = React.ElementRef<typeof AlertDialogPrimitive.Trigger>;\ninterface AlertDialogTriggerProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Trigger, RemovedProps> {}\nconst AlertDialogTrigger = React.forwardRef<AlertDialogTriggerElement, AlertDialogTriggerProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Trigger {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Trigger>\n  )\n);\nAlertDialogTrigger.displayName = 'AlertDialog.Trigger';\n\ntype AlertDialogContentElement = React.ElementRef<typeof AlertDialogPrimitive.Content>;\ninterface AlertDialogContentProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Content, RemovedProps>,\n    AlertDialogContentOwnProps {\n  container?: React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Portal>['container'];\n}\nconst AlertDialogContent = React.forwardRef<AlertDialogContentElement, AlertDialogContentProps>(\n  ({ align, ...props }, forwardedRef) => {\n    const { align: alignPropDef, ...propDefs } = alertDialogContentPropDefs;\n    const { className: alignClassName } = extractProps({ align }, { align: alignPropDef });\n    const { className, forceMount, container, ...contentProps } = extractProps(props, propDefs);\n    return (\n      <AlertDialogPrimitive.Portal container={container} forceMount={forceMount}>\n        <Theme asChild>\n          <AlertDialogPrimitive.Overlay className=\"rt-BaseDialogOverlay rt-AlertDialogOverlay\">\n            <div className=\"rt-BaseDialogScroll rt-AlertDialogScroll\">\n              <div\n                className={`rt-BaseDialogScrollPadding rt-AlertDialogScrollPadding ${alignClassName}`}\n              >\n                <AlertDialogPrimitive.Content\n                  {...contentProps}\n                  ref={forwardedRef}\n                  className={classNames('rt-BaseDialogContent', 'rt-AlertDialogContent', className)}\n                />\n              </div>\n            </div>\n          </AlertDialogPrimitive.Overlay>\n        </Theme>\n      </AlertDialogPrimitive.Portal>\n    );\n  }\n);\nAlertDialogContent.displayName = 'AlertDialog.Content';\n\ntype AlertDialogTitleElement = React.ElementRef<typeof Heading>;\ntype AlertDialogTitleProps = ComponentPropsWithout<typeof Heading, 'asChild'>;\nconst AlertDialogTitle = React.forwardRef<AlertDialogTitleElement, AlertDialogTitleProps>(\n  (props, forwardedRef) => (\n    <AlertDialogPrimitive.Title asChild>\n      <Heading size=\"5\" mb=\"3\" trim=\"start\" {...props} asChild={false} ref={forwardedRef} />\n    </AlertDialogPrimitive.Title>\n  )\n);\nAlertDialogTitle.displayName = 'AlertDialog.Title';\n\ntype AlertDialogDescriptionElement = HTMLParagraphElement;\ntype AlertDialogDescriptionProps = ComponentPropsAs<typeof Text, 'p'>;\nconst AlertDialogDescription = React.forwardRef<\n  AlertDialogDescriptionElement,\n  AlertDialogDescriptionProps\n>((props, forwardedRef) => (\n  <AlertDialogPrimitive.Description asChild>\n    <Text as=\"p\" size=\"3\" {...props} asChild={false} ref={forwardedRef} />\n  </AlertDialogPrimitive.Description>\n));\nAlertDialogDescription.displayName = 'AlertDialog.Description';\n\ntype AlertDialogActionElement = React.ElementRef<typeof AlertDialogPrimitive.Action>;\ninterface AlertDialogActionProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Action, RemovedProps> {}\nconst AlertDialogAction = React.forwardRef<AlertDialogActionElement, AlertDialogActionProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Action {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Action>\n  )\n);\nAlertDialogAction.displayName = 'AlertDialog.Action';\n\ntype AlertDialogCancelElement = React.ElementRef<typeof AlertDialogPrimitive.Cancel>;\ninterface AlertDialogCancelProps\n  extends ComponentPropsWithout<typeof AlertDialogPrimitive.Cancel, RemovedProps> {}\nconst AlertDialogCancel = React.forwardRef<AlertDialogCancelElement, AlertDialogCancelProps>(\n  ({ children, ...props }, forwardedRef) => (\n    <AlertDialogPrimitive.Cancel {...props} ref={forwardedRef} asChild>\n      {requireReactElement(children)}\n    </AlertDialogPrimitive.Cancel>\n  )\n);\nAlertDialogCancel.displayName = 'AlertDialog.Cancel';\n\nexport {\n  AlertDialogRoot as Root,\n  AlertDialogTrigger as Trigger,\n  AlertDialogContent as Content,\n  AlertDialogTitle as Title,\n  AlertDialogDescription as Description,\n  AlertDialogAction as Action,\n  AlertDialogCancel as Cancel,\n};\n\nexport type {\n  AlertDialogRootProps as RootProps,\n  AlertDialogTriggerProps as TriggerProps,\n  AlertDialogContentProps as ContentProps,\n  AlertDialogTitleProps as TitleProps,\n  AlertDialogDescriptionProps as DescriptionProps,\n  AlertDialogActionProps as ActionProps,\n  AlertDialogCancelProps as CancelProps,\n};\n"],
  "mappings": "0jBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,EAAA,WAAAC,EAAA,YAAAC,EAAA,gBAAAC,EAAA,SAAAC,EAAA,UAAAC,EAAA,YAAAC,IAAA,eAAAC,EAAAT,GAAA,IAAAU,EAAuB,oBACvBC,EAAuB,yBACvBC,EAAoD,oBAEpDC,EAA2C,mCAC3CC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAAsB,sBACtBC,EAA6B,uCAC7BC,EAAoC,+CAWpC,MAAMZ,EAAmDa,GACvDT,EAAA,cAAC,EAAAU,YAAqB,KAArB,CAA2B,GAAGD,EAAO,EAExCb,EAAgB,YAAc,mBAK9B,MAAME,EAAqBE,EAAM,WAC/B,CAAC,CAAE,SAAAW,EAAU,GAAGF,CAAM,EAAGG,IACvBZ,EAAA,cAAC,EAAAU,YAAqB,QAArB,CAA8B,GAAGD,EAAO,IAAKG,EAAc,QAAO,OAChE,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAb,EAAmB,YAAc,sBAQjC,MAAMJ,EAAqBM,EAAM,WAC/B,CAAC,CAAE,MAAAa,EAAO,GAAGJ,CAAM,EAAGG,IAAiB,CACrC,KAAM,CAAE,MAAOE,EAAc,GAAGC,CAAS,EAAI,6BACvC,CAAE,UAAWC,CAAe,KAAI,gBAAa,CAAE,MAAAH,CAAM,EAAG,CAAE,MAAOC,CAAa,CAAC,EAC/E,CAAE,UAAAG,EAAW,WAAAC,EAAY,UAAAC,EAAW,GAAGC,CAAa,KAAI,gBAAaX,EAAOM,CAAQ,EAC1F,OACEf,EAAA,cAAC,EAAAU,YAAqB,OAArB,CAA4B,UAAWS,EAAW,WAAYD,GAC7DlB,EAAA,cAAC,SAAM,QAAO,IACZA,EAAA,cAAC,EAAAU,YAAqB,QAArB,CAA6B,UAAU,8CACtCV,EAAA,cAAC,OAAI,UAAU,4CACbA,EAAA,cAAC,OACC,UAAW,0DAA0DgB,CAAc,IAEnFhB,EAAA,cAAC,EAAAU,YAAqB,QAArB,CACE,GAAGU,EACJ,IAAKR,EACL,aAAW,EAAAS,SAAW,uBAAwB,wBAAyBJ,CAAS,EAClF,CACF,CACF,CACF,CACF,CACF,CAEJ,CACF,EACAvB,EAAmB,YAAc,sBAIjC,MAAMG,EAAmBG,EAAM,WAC7B,CAACS,EAAOG,IACNZ,EAAA,cAAC,EAAAU,YAAqB,MAArB,CAA2B,QAAO,IACjCV,EAAA,cAAC,WAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,QAAS,GAAGS,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtF,CAEJ,EACAf,EAAiB,YAAc,oBAI/B,MAAMF,EAAyBK,EAAM,WAGnC,CAACS,EAAOG,IACRZ,EAAA,cAAC,EAAAU,YAAqB,YAArB,CAAiC,QAAO,IACvCV,EAAA,cAAC,QAAK,GAAG,IAAI,KAAK,IAAK,GAAGS,EAAO,QAAS,GAAO,IAAKG,EAAc,CACtE,CACD,EACDjB,EAAuB,YAAc,0BAKrC,MAAMH,EAAoBQ,EAAM,WAC9B,CAAC,CAAE,SAAAW,EAAU,GAAGF,CAAM,EAAGG,IACvBZ,EAAA,cAAC,EAAAU,YAAqB,OAArB,CAA6B,GAAGD,EAAO,IAAKG,EAAc,QAAO,OAC/D,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAnB,EAAkB,YAAc,qBAKhC,MAAMC,EAAoBO,EAAM,WAC9B,CAAC,CAAE,SAAAW,EAAU,GAAGF,CAAM,EAAGG,IACvBZ,EAAA,cAAC,EAAAU,YAAqB,OAArB,CAA6B,GAAGD,EAAO,IAAKG,EAAc,QAAO,OAC/D,uBAAoBD,CAAQ,CAC/B,CAEJ,EACAlB,EAAkB,YAAc",
  "names": ["alert_dialog_exports", "__export", "AlertDialogAction", "AlertDialogCancel", "AlertDialogContent", "AlertDialogDescription", "AlertDialogRoot", "AlertDialogTitle", "AlertDialogTrigger", "__toCommonJS", "React", "import_classnames", "import_radix_ui", "import_alert_dialog_props", "import_heading", "import_text", "import_theme", "import_extract_props", "import_require_react_element", "props", "AlertDialogPrimitive", "children", "forwardedRef", "align", "alignPropDef", "propDefs", "alignClassName", "className", "forceMount", "container", "contentProps", "classNames"]
}
