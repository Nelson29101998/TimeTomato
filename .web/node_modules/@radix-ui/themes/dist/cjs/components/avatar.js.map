{
  "version": 3,
  "sources": ["../../../src/components/avatar.tsx"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { Avatar as AvatarPrimitive } from 'radix-ui';\n\nimport { avatarPropDefs } from './avatar.props.js';\nimport { extractProps } from '../helpers/extract-props.js';\nimport { getSubtree } from '../helpers/get-subtree.js';\nimport { marginPropDefs } from '../props/margin.props.js';\n\nimport type { MarginProps } from '../props/margin.props.js';\nimport type { ComponentPropsWithout, RemovedProps } from '../helpers/component-props.js';\nimport type { GetPropDefTypes } from '../props/prop-def.js';\n\ninterface AvatarProps extends MarginProps, AvatarImplProps {}\nconst Avatar = React.forwardRef<AvatarImplElement, AvatarProps>((props, forwardedRef) => {\n  const { asChild, children, className, style, color, radius, ...imageProps } = extractProps(\n    props,\n    avatarPropDefs,\n    marginPropDefs\n  );\n\n  return (\n    // TODO as a rule, should we rather spread the props on root?\n    <AvatarPrimitive.Root\n      data-accent-color={color}\n      data-radius={radius}\n      className={classNames('rt-reset', 'rt-AvatarRoot', className)}\n      style={style}\n      asChild={asChild}\n    >\n      {getSubtree({ asChild, children }, <AvatarImpl ref={forwardedRef} {...imageProps} />)}\n    </AvatarPrimitive.Root>\n  );\n});\nAvatar.displayName = 'Avatar';\n\ntype AvatarImplElement = React.ElementRef<typeof AvatarPrimitive.Image>;\ntype AvatarOwnProps = GetPropDefTypes<typeof avatarPropDefs>;\n\ninterface AvatarImplProps\n  extends ComponentPropsWithout<typeof AvatarPrimitive.Image, RemovedProps>,\n    AvatarOwnProps {\n  // TODO: See if we can automate making prop defs with `required: true` non nullable\n  fallback: NonNullable<AvatarOwnProps['fallback']>;\n}\n\nconst AvatarImpl = React.forwardRef<AvatarImplElement, AvatarImplProps>(\n  ({ fallback, ...imageProps }, forwardedRef) => {\n    const [status, setStatus] = React.useState<'idle' | 'loading' | 'loaded' | 'error'>('idle');\n    return (\n      <>\n        {status === 'idle' || status === 'loading' ? <span className=\"rt-AvatarFallback\" /> : null}\n\n        {status === 'error' ? (\n          <AvatarPrimitive.Fallback\n            className={classNames('rt-AvatarFallback', {\n              'rt-one-letter': typeof fallback === 'string' && fallback.length === 1,\n              'rt-two-letters': typeof fallback === 'string' && fallback.length === 2,\n            })}\n            delayMs={0}\n          >\n            {fallback}\n          </AvatarPrimitive.Fallback>\n        ) : null}\n\n        <AvatarPrimitive.Image\n          ref={forwardedRef}\n          className=\"rt-AvatarImage\"\n          {...imageProps}\n          onLoadingStatusChange={(status) => {\n            imageProps.onLoadingStatusChange?.(status);\n            setStatus(status);\n          }}\n        />\n      </>\n    );\n  }\n);\n\nAvatarImpl.displayName = 'AvatarImpl';\n\nexport { Avatar };\nexport type { AvatarProps };\n"],
  "mappings": "ukBAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,YAAAE,IAAA,eAAAC,EAAAH,GAEA,IAAAI,EAAuB,oBACvBC,EAAuB,yBACvBC,EAA0C,oBAE1CC,EAA+B,6BAC/BC,EAA6B,uCAC7BC,EAA2B,qCAC3BC,EAA+B,oCAO/B,MAAMR,EAASE,EAAM,WAA2C,CAACO,EAAOC,IAAiB,CACvF,KAAM,CAAE,QAAAC,EAAS,SAAAC,EAAU,UAAAC,EAAW,MAAAC,EAAO,MAAAC,EAAO,OAAAC,EAAQ,GAAGC,CAAW,KAAI,gBAC5ER,EACA,iBACA,gBACF,EAEA,OAEEP,EAAA,cAAC,EAAAgB,OAAgB,KAAhB,CACC,oBAAmBH,EACnB,cAAaC,EACb,aAAW,EAAAG,SAAW,WAAY,gBAAiBN,CAAS,EAC5D,MAAOC,EACP,QAASH,MAER,cAAW,CAAE,QAAAA,EAAS,SAAAC,CAAS,EAAGV,EAAA,cAACkB,EAAA,CAAW,IAAKV,EAAe,GAAGO,EAAY,CAAE,CACtF,CAEJ,CAAC,EACDjB,EAAO,YAAc,SAYrB,MAAMoB,EAAalB,EAAM,WACvB,CAAC,CAAE,SAAAmB,EAAU,GAAGJ,CAAW,EAAGP,IAAiB,CAC7C,KAAM,CAACY,EAAQC,CAAS,EAAIrB,EAAM,SAAkD,MAAM,EAC1F,OACEA,EAAA,cAAAA,EAAA,cACGoB,IAAW,QAAUA,IAAW,UAAYpB,EAAA,cAAC,QAAK,UAAU,oBAAoB,EAAK,KAErFoB,IAAW,QACVpB,EAAA,cAAC,EAAAgB,OAAgB,SAAhB,CACC,aAAW,EAAAC,SAAW,oBAAqB,CACzC,gBAAiB,OAAOE,GAAa,UAAYA,EAAS,SAAW,EACrE,iBAAkB,OAAOA,GAAa,UAAYA,EAAS,SAAW,CACxE,CAAC,EACD,QAAS,GAERA,CACH,EACE,KAEJnB,EAAA,cAAC,EAAAgB,OAAgB,MAAhB,CACC,IAAKR,EACL,UAAU,iBACT,GAAGO,EACJ,sBAAwBK,GAAW,CACjCL,EAAW,wBAAwBK,CAAM,EACzCC,EAAUD,CAAM,CAClB,EACF,CACF,CAEJ,CACF,EAEAF,EAAW,YAAc",
  "names": ["avatar_exports", "__export", "Avatar", "__toCommonJS", "React", "import_classnames", "import_radix_ui", "import_avatar_props", "import_extract_props", "import_get_subtree", "import_margin_props", "props", "forwardedRef", "asChild", "children", "className", "style", "color", "radius", "imageProps", "AvatarPrimitive", "classNames", "AvatarImpl", "fallback", "status", "setStatus"]
}
